
proc std::internal::env::internal_args() -> [str] = gera_std_env_args

proc std::internal::env::internal_vars() -> [str] = gera_std_env_vars
proc std::internal::env::internal_has_var(str) -> bool = gera_std_env_has_var
proc std::internal::env::internal_get_var(str) -> str = gera_std_env_get_var
proc std::internal::env::internal_set_var(str, str) = gera_std_env_set_var
proc std::internal::env::internal_delete_var(str) = gera_std_env_delete_var

proc std::internal::env::internal_run(str) -> int = gera_std_env_run

/// Returns `true` if the program is being run on Windows.
proc std::env::is_windows() -> bool = gera_std_env_is_windows
/// Returns `true` if the program is being run on macOS.
proc std::env::is_osx() -> bool = gera_std_env_is_osx
/// Returns `true` if the program is being run on iOS.
proc std::env::is_ios() -> bool = gera_std_env_is_ios
/// Returns `true` if the program is being run on Linux.
proc std::env::is_linux() -> bool = gera_std_env_is_linux
/// Returns `true` if the program is being run on Android.
proc std::env::is_android() -> bool = gera_std_env_is_android
/// Returns `true` if the program is being run on UNIX.
proc std::env::is_unix() -> bool = gera_std_env_is_unix